@page "/Jugador/Index"

@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Registro de Jugadores</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		<div class="card-header d-flex justify-content-between align-items-center">
			<h5 class="card-title mb-0"><strong>Index de Jugadores</strong></h5>
			<a href="/Jugador/Create" class="btn btn-primary"><span class="bi bi-plus-square mt-3"></span> Crear</a>
		</div>

		<div class="card-body">
			<div class="row">
				@*Filtrar Por*@
				<div class="col-3">
					<label class="col-form-label"><strong>Filtrar Por</strong></label>
				</div>

				@*Busqueda*@
				<div class="col-4">
					<label class="col-form-label"><strong>Buscar</strong></label>
				</div>
			</div>

			<div class="row align-items-center">
				@*filtro*@
				<div class="col-3">
					<InputSelect class="form-select" @bind-Value="Filtro">
						<option value="" selected disabled>Elija una opci&oacute;n</option>
						<option value="JugadorId">JugadorId</option>
						<option value="Nombre">Nombre</option>
						<option value="Partidas">Partidas</option>
					</InputSelect>
				</div>

				@*Busqueda*@
				<div class="col-4">
					<div class="input-group">
						<input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
						<button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
					</div>
				</div>
			</div>

			<table class="table table-hover table-striped table-bordered align-middle text-center mt-3">
				<thead class="table table-striped text-black">
					<tr>
						<th>JUGADOR ID</th>
						<th>NOMBRE</th>
						<th>PARTIDAS</th>
						<th>OPCIONES</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var jugador in ListaJugadores)
					{
						<tr>
							<td>@jugador.JugadorId</td>
							<td>@jugador.Nombre</td>
							<td>@jugador.Partidas</td>
							<td>
								<a href="/Jugador/Edit/@jugador.JugadorId" class="btn btn-outline-primary">
									<span class="bi bi-pencil"></span>
								</a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>

		<div class="card-footer space-between">
			<label><strong>Cantidad: @ListaJugadores.Count()</strong></label>
		</div>
	</div>
</div>

@code
{
	public List<Jugadores> ListaJugadores { get; set; } = new List<Jugadores>();
	public string Filtro { get; set; } = string.Empty;
	public string ValorFiltro { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		ListaJugadores = await jugadoresService.GetList(j => j.JugadorId > 0);
	}

	private async Task Buscar()
	{
		if (!string.IsNullOrWhiteSpace(ValorFiltro))
		{
			if (Filtro == "JugadorId" && int.TryParse(ValorFiltro, out var jugadorId))
			{
				ListaJugadores = await jugadoresService.GetList(j => j.JugadorId == jugadorId);
			}
			else if (Filtro == "Nombre")
			{
				ListaJugadores = await jugadoresService.GetList(j => j.Nombre.Contains(ValorFiltro));
			}
			else if (Filtro == "Partidas" && int.TryParse(ValorFiltro, out var partidas))
			{
				ListaJugadores = await jugadoresService.GetList(j => j.Partidas == partidas);
			}
		}
		else
		{
			ListaJugadores = await jugadoresService.GetList(j => j.JugadorId > 0);
		}
	}
}