@page "/Jugador/Edit/{JugadorId:int}"

@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Jugador</PageTitle>
<EditForm Model="Jugador" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />

	<div class="container">
		<div class="card-header text-center">
			<h5 class="card-title">Editar Jugador</h5>
		</div>

		<div class="card-body">
			<div class="mb-3">
				<label class="form-label"><strong>JugadorId</strong></label>
				<InputNumber class="form-control" @bind-Value="Jugador.JugadorId" readonly></InputNumber>
			</div>

			<div class="mb-3">
				<label class="form-label"><strong>Nombres</strong></label>
				<InputText class="form-control" @bind-Value="Jugador.Nombre"></InputText>
				<ValidationMessage For="(() => Jugador.Nombre)" />
			</div>

			<div class="mb-3">
				<label class="form-label"><strong>Partidas</strong></label>
				<InputNumber class="form-control" @bind-Value="Jugador.Victorias"></InputNumber>
				<ValidationMessage For="(() => Jugador.Victorias)" />
			</div>

			@if (!string.IsNullOrEmpty(errorMensaje))
			{
				<div class="alert alert-danger">@errorMensaje</div>
			}
		</div>

		<div class="card-footer text-center">
			<a href="/Jugador/Index" class="btn btn-secondary me-2">
				<i class="bi bi-arrow-left"></i> Volver
			</a>

			<button type="submit" class="btn btn-primary me-2">
				<i class="bi bi-save"></i> Modificar
			</button>

			<button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#eliminarModal">
				<i class="bi bi-trash"></i> Eliminar
			</button>
		</div>

		<div class="modal fade" id="eliminarModal" tabindex="-1" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Confirmar Eliminación</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
					</div>
					<div class="modal-body">
						<p>¿Seguro que quieres eliminar este jugador?</p>
						<ul>
							<li><strong>JugadorId:</strong> @Jugador.JugadorId</li>
							<li><strong>Nombre:</strong> @Jugador.Nombre</li>
							<li><strong>Partidas:</strong> @Jugador.Victorias</li>
						</ul>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
						<button type="button" class="btn btn-danger" @onclick="Eliminar" data-bs-dismiss="modal">
							Eliminar
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</EditForm>

@code {
	[Parameter]
	public int JugadorId { get; set; }

	public Jugadores Jugador { get; set; } = new Jugadores();
	private string errorMensaje = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		if (JugadorId > 0)
		{
			Jugador = await jugadoresService.Buscar(JugadorId);
		}
	}

	public async Task Guardar()
	{
		var creado = await jugadoresService.Modificar(Jugador);

		if (creado)
		{
			navigationManager.NavigateTo("/Jugador/Index");
		}
		else
		{
			errorMensaje = ("⚠️ Ya existe un jugador con este nombre: " + Jugador.Nombre);
		}
	}

	public async Task Eliminar()
	{
		var eliminado = await jugadoresService.Eliminar(Jugador.JugadorId);

		if (eliminado)
		{
			navigationManager.NavigateTo("/Jugador/Index");
		}
		else
		{
			errorMensaje = ("No se pudo eliminar correctamente");
		}
	}
}
